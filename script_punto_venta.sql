-- MySQL Script generated by MySQL Workbench
-- 04/21/22 20:16:37
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema punto_venta
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS punto_venta ;

-- -----------------------------------------------------
-- Schema punto_venta
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS punto_venta DEFAULT CHARACTER SET utf8 ;
USE punto_venta ;

-- -----------------------------------------------------
-- Table punto_venta.cnf_tipo_documento
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.cnf_tipo_documento (
  cnf_tipo_documento_id INT NOT NULL  auto_increment,
  abreviatura CHAR(3) NULL,
  nombre VARCHAR(50) not NULL,
  codigo_sunat CHAR(2) not NULL,
  flag_estado CHAR(1) not NULL,
  PRIMARY KEY (cnf_tipo_documento_id))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table punto_venta.cnf_maestro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.cnf_maestro (
  cnf_maestro_id INT NOT NULL AUTO_INCREMENT,
  nro_doc CHAR(11) not NULL,
  nombres VARCHAR(100) not NULL,
  apellido_paterno VARCHAR(100) NULL,
  apellido_materno VARCHAR(100) NULL,
  razon_social VARCHAR(100) NULL,
  direccion VARCHAR(200) NULL,
  correo VARCHAR(100) NULL,
  telefono VARCHAR(20) NULL,
  fecha_registro DATETIME not NULL,
  flag_estado CHAR(1) NULL,
  cnf_tipo_documento_id INT NOT NULL,
  cnf_distrito_id INT,
  PRIMARY KEY (cnf_maestro_id),
  CONSTRAINT fk_maestro_cnf_tipo_documento1
    FOREIGN KEY (cnf_tipo_documento_id)
    REFERENCES punto_venta.cnf_tipo_documento (cnf_tipo_documento_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_maestro_cnf_distrito
    FOREIGN KEY (cnf_distrito_id)
    REFERENCES punto_venta.cnf_distrito (cnf_distrito_id)
)
ENGINE = InnoDB;

CREATE INDEX fk_cliente_ubigeo1_idx ON punto_venta.cnf_maestro (cnf_distrito_id ASC);

CREATE INDEX fk_maestro_cnf_tipo_documento1_idx ON punto_venta.cnf_maestro (cnf_tipo_documento_id ASC);


-- -----------------------------------------------------
-- Table punto_venta.cnf_marca
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.cnf_marca (
  cnf_marca_id INT NOT NULL AUTO_INCREMENT,
  nombre VARCHAR(100) not NULL,
  flag_estado CHAR(1) NULL,
  PRIMARY KEY (cnf_marca_id))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table punto_venta.cnf_unidad_medida
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.cnf_unidad_medida (
  cnf_unidad_medida_id INT NOT NULL AUTO_INCREMENT,
  codigo CHAR(3) not NULL,
  nombre VARCHAR(100) not NULL
  PRIMARY KEY (cnf_unidad_medida_id))
ENGINE = InnoDB;

CREATE UNIQUE INDEX codigo_UNIQUE ON punto_venta.cnf_unidad_medida (codigo ASC);


-- -----------------------------------------------------
-- Table punto_venta.cnf_categoria
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.cnf_categoria (
  cnf_categoria_id INT NOT NULL AUTO_INCREMENT,
  nombre VARCHAR(100) not NULL,
  PRIMARY KEY (cnf_categoria_id))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table punto_venta.cnf_sub_categoria
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.cnf_sub_categoria (
  cnf_sub_categoria_id INT NOT NULL AUTO_INCREMENT,
  nombre VARCHAR(100) NULL,
  cnf_categoria_id INT NOT NULL,
  PRIMARY KEY (cnf_sub_categoria_id),
  CONSTRAINT fk_sub_categoria_categoria1
    FOREIGN KEY (cnf_categoria_id)
    REFERENCES punto_venta.cnf_categoria (cnf_categoria_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX fk_sub_categoria_categoria1_idx ON punto_venta.cnf_sub_categoria (cnf_categoria_id ASC);


-- -----------------------------------------------------
-- Table punto_venta.cnf_producto
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.cnf_producto (
  cnf_producto_id INT NOT NULL AUTO_INCREMENT,
  codigo CHAR(15) NULL,
  nombre VARCHAR(100) not NULL,
  precio DECIMAL(12,2) NULL,
  existencia DECIMAL(12,2) NULL,
  fecha_registro DATETIME NULL,
  ruta_imagen VARCHAR(100) NULL,
  flag_estado CHAR(1) NULL,
  cnf_marca_id INT  NULL,
  cnf_unidad_medida_id INT NOT NULL,
  cnf_sub_categoria_id INT NOT NULL,
  PRIMARY KEY (cnf_producto_id),
  CONSTRAINT fk_producto_marca1
    FOREIGN KEY (cnf_marca_id)
    REFERENCES punto_venta.cnf_marca (cnf_marca_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_producto_unidad_medida1
    FOREIGN KEY (cnf_unidad_medida_id)
    REFERENCES punto_venta.cnf_unidad_medida (cnf_unidad_medida_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_producto_sub_categoria1
    FOREIGN KEY (cnf_sub_categoria_id)
    REFERENCES punto_venta.cnf_sub_categoria (cnf_sub_categoria_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX fk_producto_marca1_idx ON punto_venta.cnf_producto (cnf_marca_id ASC);

CREATE INDEX fk_producto_unidad_medida1_idx ON punto_venta.cnf_producto (cnf_unidad_medida_id ASC);

CREATE UNIQUE INDEX codigo_UNIQUE ON punto_venta.cnf_producto (codigo ASC);

CREATE INDEX fk_producto_sub_categoria1_idx ON punto_venta.cnf_producto (cnf_sub_categoria_id ASC);


-- -----------------------------------------------------
-- Table punto_venta.cnf_moneda
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.cnf_moneda (
  cnf_moneda_id INT NOT NULL AUTO_INCREMENT,
  codigo CHAR(3) not NULL,
  nombre VARCHAR(50) not NULL,
  flag_estado CHAR(1) NULL,
  PRIMARY KEY (cnf_moneda_id))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table punto_venta.cnf_forma_pago
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.cnf_forma_pago (
  cnf_forma_pago_id INT NOT NULL AUTO_INCREMENT,
  nombre VARCHAR(100) NULL,
  flag_estado CHAR(1) NULL,
  PRIMARY KEY (cnf_forma_pago_id))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table punto_venta.cnf_tipo_comprobante
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.cnf_tipo_comprobante (
  cnf_tipo_comprobante_id INT NOT NULL AUTO_INCREMENT,
  nombre VARCHAR(100) not NULL,
  codigo_sunat CHAR(2) not NULL,
  codigo CHAR(3) NULL,
  flag_electronico CHAR(1) NULL,
  PRIMARY KEY (cnf_tipo_comprobante_id))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table punto_venta.cnf_empresa
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.cnf_empresa (
  cnf_empresa_id INT NOT NULL auto_increment,
  cnf_tipo_documento_id int not NULL,
  nombre VARCHAR(200) not NULL,
  descripcion VARCHAR(300) NULL,
  nro_documento VARCHAR(11) not NULL,
  direccion VARCHAR(100) NULL,
  telefono VARCHAR(20) NULL,
  empresacol VARCHAR(45) NULL,
  cnf_distrito_id INT,
  PRIMARY KEY (cnf_empresa_id),
  CONSTRAINT fk_cnf_empresa_cnf_distrito
    FOREIGN KEY (cnf_distrito_id)
    REFERENCES punto_venta.cnf_distrito (cnf_distrito_id),
  CONSTRAINT fk_cnf_empresa_cnf_tipo_documento
    FOREIGN KEY (cnf_tipo_documento_id)
    REFERENCES punto_venta.cnf_tipo_documento (cnf_tipo_documento_id)
  )
ENGINE = InnoDB;

CREATE INDEX fk_cnf_empresa_idx1 ON punto_venta.cnf_empresa (cnf_tipo_documento_id ASC);
CREATE INDEX fk_cnf_empresa_idx2 ON punto_venta.cnf_empresa (cnf_distrito_id ASC);

-- -----------------------------------------------------
-- Table punto_venta.cnf_local
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.cnf_local (
  cnf_local_id INT NOT NULL auto_increment,
  nombre VARCHAR(100) not NULL,
  direccion VARCHAR(100) NULL,
  cnf_empresa_id INT not NULL,
  PRIMARY KEY (cnf_local_id),
  CONSTRAINT fk_cnf_local_empresa1
    FOREIGN KEY (cnf_empresa_id)
    REFERENCES punto_venta.cnf_empresa (cnf_empresa_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX fk_cnf_local_empresa1_idx ON punto_venta.cnf_local (cnf_empresa_id ASC);


-- -----------------------------------------------------
-- Table punto_venta.cnf_num_comprobante
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.cnf_num_comprobante (
  cnf_num_comprobante_id INT NOT NULL auto_increment,
  serie CHAR(4) not NULL,
  ultimo_nro INT NULL,
  cnf_tipo_comprobante_id INT NOT NULL,
  cnf_local_id INT NOT NULL,
  PRIMARY KEY (cnf_num_comprobante_id),
  CONSTRAINT fk_cnf_num_comprobante_cnf_tipo_comprobante1
    FOREIGN KEY (cnf_tipo_comprobante_id)
    REFERENCES punto_venta.cnf_tipo_comprobante (cnf_tipo_comprobante_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_cnf_num_comprobante_cnf_local1
    FOREIGN KEY (cnf_local_id)
    REFERENCES punto_venta.cnf_local (cnf_local_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX fk_cnf_num_comprobante_cnf_tipo_comprobante1_idx ON punto_venta.cnf_num_comprobante (cnf_tipo_comprobante_id ASC);

CREATE INDEX fk_cnf_num_comprobante_cnf_local1_idx ON punto_venta.cnf_num_comprobante (cnf_local_id ASC);


-- -----------------------------------------------------
-- Table punto_venta.inv_almacen
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.inv_almacen (
  inv_almacen_id INT NOT NULL  auto_increment,
  nombre VARCHAR(100) not NULL,
  flag_estado CHAR(1) NULL,
  cnf_local_id INT NOT NULL,
  PRIMARY KEY (inv_almacen_id),
  CONSTRAINT fk_inv_almacen_cnf_local1
    FOREIGN KEY (cnf_local_id)
    REFERENCES punto_venta.cnf_local (cnf_local_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX fk_inv_almacen_cnf_local1_idx ON punto_venta.inv_almacen (cnf_local_id ASC);


-- -----------------------------------------------------
-- Table punto_venta.act_comprobante
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.act_comprobante (
  act_comprobante_id INT NOT NULL AUTO_INCREMENT,
  fecha date not NULL,
  serie varchar(4) not null,
  numero varchar(8) not null,
  fecha_registro DATETIME not NULL default now(),
  billete DECIMAL(12,2) NULL,
  total DECIMAL(12,2) not NULL,
  vuelto DECIMAL(12,2) NULL,
  descuento DECIMAL(12,2) NULL,
  subtotal DECIMAL(12,2) NULL,
  igv DECIMAL(12,2) NULL,
  observacion VARCHAR(100) NULL,
  flag_estado CHAR(1) not NULL,
  flag_isventa CHAR(1) not NULL,
  cnf_maestro_id INT NOT NULL,
  cnf_forma_pago_id INT NOT NULL,
  cnf_moneda_id INT NOT NULL,
  cnf_local_id INT NOT NULL,
  cnf_tipo_comprobante_id INT NOT NULL,
  inv_almacen_id INT NOT NULL,
  PRIMARY KEY (act_comprobante_id),
  CONSTRAINT fk_act_venta_moneda1
    FOREIGN KEY (cnf_moneda_id)
    REFERENCES punto_venta.cnf_moneda (cnf_moneda_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_act_venta_forma_pago1
    FOREIGN KEY (cnf_forma_pago_id)
    REFERENCES punto_venta.cnf_forma_pago (cnf_forma_pago_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_act_venta_cliente1
    FOREIGN KEY (cnf_maestro_id)
    REFERENCES punto_venta.cnf_maestro (cnf_maestro_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_act_venta_cnf_tipo_comprobante
    FOREIGN KEY (cnf_tipo_comprobante_id)
    REFERENCES punto_venta.cnf_tipo_comprobante (cnf_tipo_comprobante_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_act_comprobante_inv_almacen1
    FOREIGN KEY (inv_almacen_id)
    REFERENCES punto_venta.inv_almacen (inv_almacen_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX fk_act_venta_moneda1_idx ON punto_venta.act_comprobante (cnf_moneda_id ASC);

CREATE INDEX fk_act_venta_forma_pago1_idx ON punto_venta.act_comprobante (cnf_forma_pago_id ASC);

CREATE INDEX fk_act_venta_cliente1_idx ON punto_venta.act_comprobante (cnf_maestro_id ASC);

CREATE INDEX fk_act_venta_cnf_tipo_comprobante1_idx ON punto_venta.act_comprobante (cnf_tipo_comprobante_id ASC);

CREATE INDEX fk_act_comprobante_inv_almacen1_idx ON punto_venta.act_comprobante (inv_almacen_id ASC);


-- -----------------------------------------------------
-- Table punto_venta.act_comprobante_detalle
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.act_comprobante_detalle (
  act_comprobante_detalle_id INT NOT NULL AUTO_INCREMENT,
  descripcion VARCHAR(100) NULL,
  cantidad DECIMAL(12,2) NOT NULL,
  precio DECIMAL(12,2) NOT NULL,
  -- descuento DECIMAL(12,2) NULL,
  -- importe DECIMAL(12,2) NOT NULL,
  act_comprobante_id INT NOT NULL,
  cnf_producto_id INT NOT NULL,
  cnf_impuesto_condicion_id INT NOT NULL,
  PRIMARY KEY (act_comprobante_detalle_id),
  CONSTRAINT fk_act_comprobante_detalle_act_comprobante
    FOREIGN KEY (act_comprobante_id)
    REFERENCES punto_venta.act_comprobante (act_comprobante_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_act_venta_detalle_producto1
    FOREIGN KEY (cnf_producto_id)
    REFERENCES punto_venta.cnf_producto (cnf_producto_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
   CONSTRAINT fk_cnf_impuesto_condicion_cnf_impuesto_condicion
    FOREIGN KEY (cnf_impuesto_condicion_id)
    REFERENCES punto_venta.cnf_impuesto_condicion (cnf_impuesto_condicion_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX fk_act_comprobante_detalle_act_comprobante1_idx ON punto_venta.act_comprobante_detalle (act_comprobante_id ASC);

CREATE INDEX fk_act_venta_detalle_cnf_producto1_idx ON punto_venta.act_comprobante_detalle (cnf_producto_id ASC);

CREATE INDEX fk_cnf_impuesto_condicion_cnf_impuesto_condicion_idx ON punto_venta.act_comprobante_detalle (cnf_impuesto_condicion_id ASC);
-- -----------------------------------------------------
-- Table punto_venta.inv_movimiento_producto
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS punto_venta.inv_movimiento_producto (
  inv_movimiento_producto_id INT NOT NULL AUTO_INCREMENT,
  cantidad DECIMAL(12,3) NULL,
  cnf_producto_id INT NOT NULL,
  inv_almacen_id INT NOT NULL,
  PRIMARY KEY (inv_movimiento_producto_id),
  CONSTRAINT fk_inv_movimiento_producto_inv_almacen1
    FOREIGN KEY (inv_almacen_id)
    REFERENCES punto_venta.inv_almacen (inv_almacen_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_inv_movimiento_producto_cnf_producto1
    FOREIGN KEY (cnf_producto_id)
    REFERENCES punto_venta.cnf_producto (cnf_producto_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX fk_inv_movimiento_producto_inv_almacen1_idx ON punto_venta.inv_movimiento_producto (inv_almacen_id ASC);

CREATE INDEX fk_inv_movimiento_producto_cnf_producto1_idx ON punto_venta.inv_movimiento_producto (cnf_producto_id ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



CREATE TABLE punto_venta.seg_usuario (
                seg_usuario_id int NOT NULL AUTO_INCREMENT,
                nombre VARCHAR(255) NOT NULL,
                email VARCHAR(255) NOT NULL,
                password VARCHAR(255),
                estado int NOT NULL,
                CONSTRAINT pk_seg_usuario PRIMARY KEY (seg_usuario_id)
)ENGINE = InnoDB;


CREATE TABLE punto_venta.seg_rol (
                seg_rol_id int NOT NULL AUTO_INCREMENT,
                nombre VARCHAR(255) NOT NULL,
                description VARCHAR(255),
                CONSTRAINT pk_seg_rol PRIMARY KEY (seg_rol_id)
)ENGINE = InnoDB;


CREATE TABLE punto_venta.cnf_pais (
                cnf_pais_id int NOT NULL AUTO_INCREMENT,
                nombre VARCHAR(255) NOT NULL,
                isocode CHAR(2) NOT NULL,
                CONSTRAINT pk_cnf_pais PRIMARY KEY (cnf_pais_id)
)ENGINE = InnoDB;


CREATE TABLE punto_venta.cnf_region (
                cnf_region_id int NOT NULL AUTO_INCREMENT,
                nombre VARCHAR(255) NOT NULL,
                cnf_pais_id int NOT NULL,
                CONSTRAINT pk_cnf_region PRIMARY KEY (cnf_region_id)
)ENGINE = InnoDB;


CREATE TABLE punto_venta.cnf_provincia (
                cnf_provincia_id int NOT NULL AUTO_INCREMENT,
                nombre VARCHAR(255) NOT NULL,
                cnf_region_id int NOT NULL,
                CONSTRAINT pk_cnf_provincia PRIMARY KEY (cnf_provincia_id)
)ENGINE = InnoDB;


CREATE TABLE punto_venta.cnf_distrito (
                cnf_distrito_id int NOT NULL AUTO_INCREMENT,
                nombre VARCHAR(255) NOT NULL,
                cnf_provincia_id int NOT NULL,
                value VARCHAR(16),
                CONSTRAINT pk_cnf_distrito PRIMARY KEY (cnf_distrito_id)
)ENGINE = InnoDB;


CREATE TABLE punto_venta.seg_accion (
                seg_accion_id int NOT NULL AUTO_INCREMENT,
                nombre VARCHAR(255) NOT NULL,
                description VARCHAR(255),
                CONSTRAINT pk_seg_accion PRIMARY KEY (seg_accion_id)
);


CREATE TABLE punto_venta.seg_nodo (
                seg_nodo_id int NOT NULL AUTO_INCREMENT,
                nombre VARCHAR(255) NOT NULL,
                description VARCHAR(255),
                CONSTRAINT pk_seg_nodo PRIMARY KEY (seg_nodo_id)
);

CREATE TABLE punto_venta.seg_menu (
                seg_menu_id int NOT NULL AUTO_INCREMENT,
                parent_id int,
                nombre varchar(200),
                seqorder int NOT NULL,
                icon VARCHAR(64),
                CONSTRAINT pk_seg_menu PRIMARY KEY (seg_menu_id)
);


CREATE TABLE punto_venta.seg_rol_usuario (
                seg_rol_usuario_id int NOT NULL AUTO_INCREMENT,
                seg_rol_id int NOT NULL,
                seg_usuario_id int NOT NULL,
                cnf_empresa_id int,
                cnf_local_id int,
                CONSTRAINT pk_seg_rol_usuario PRIMARY KEY (seg_rol_usuario_id)
);
CREATE TABLE punto_venta.seg_permiso (
                seg_permiso_id int NOT NULL AUTO_INCREMENT,
                seg_rol_id int NOT NULL,
                seg_nodo_id int NOT NULL,
                seg_accion_id int NOT NULL,
                CONSTRAINT pk_seg_permiso PRIMARY KEY (seg_permiso_id)
);

ALTER TABLE punto_venta.seg_permiso ADD CONSTRAINT fk_seg_permiso_seg_rol
FOREIGN KEY (seg_rol_id)
REFERENCES punto_venta.seg_rol (seg_rol_id);

ALTER TABLE punto_venta.seg_permiso ADD CONSTRAINT fk_seg_permiso_seg_nodo
FOREIGN KEY (seg_nodo_id)
REFERENCES punto_venta.seg_nodo (seg_nodo_id);

ALTER TABLE punto_venta.seg_permiso ADD CONSTRAINT fk_seg_permiso_seg_accion
FOREIGN KEY (seg_accion_id)
REFERENCES punto_venta.seg_accion (seg_accion_id);

ALTER TABLE punto_venta.seg_rol_usuario ADD CONSTRAINT fk_seg_rol_usuario_seg_usuario
FOREIGN KEY (seg_usuario_id)
REFERENCES punto_venta.seg_usuario (seg_usuario_id);

ALTER TABLE punto_venta.seg_rol_usuario ADD CONSTRAINT fk_seg_rol_usuario_seg_rol
FOREIGN KEY (seg_rol_id)
REFERENCES punto_venta.seg_rol (seg_rol_id);

ALTER TABLE punto_venta.cnf_region ADD CONSTRAINT cnf_pais_cnf_region_fk
FOREIGN KEY (cnf_pais_id)
REFERENCES punto_venta.cnf_pais (cnf_pais_id);

ALTER TABLE punto_venta.cnf_provincia ADD CONSTRAINT cnf_region_cnf_provincia_fk
FOREIGN KEY (cnf_region_id)
REFERENCES punto_venta.cnf_region (cnf_region_id);

ALTER TABLE punto_venta.cnf_distrito ADD CONSTRAINT cnf_provincia_cnf_distrito_fk
FOREIGN KEY (cnf_provincia_id)
REFERENCES punto_venta.cnf_provincia (cnf_provincia_id);
 
ALTER TABLE punto_venta.seg_menu ADD CONSTRAINT seg_menu_seg_menu1_fk
FOREIGN KEY (parent_id)
REFERENCES punto_venta.seg_menu (seg_menu_id);

create table cnf_impuesto_condicion(
	cnf_impuesto_condicion_id int not null auto_increment primary key,
    nombre varchar(200),
    codigo_sunat varchar(2)
)engine=innodb;

insert into cnf_impuesto_condicion values(null,'Gravado - Operación Onerosa','10');

alter table act_comprobante
add cnf_local_id INT NOT NULL;

alter table act_comprobante
add fecha date not NULL;

alter table act_comprobante
add numero varchar(8) not null;

alter table act_comprobante
add inv_almacen_id INT NOT NULL;

alter table act_comprobante_Detalle
add cnf_impuesto_condicion_id INT NOT NULL;

alter table act_comprobante_Detalle
add afectacion_igv decimal(18,2) NOT NULL;

alter table cnf_producto
add codigo varchar(200) NULL;

alter table act_comprobante
add envio_pse_flag char(1) DEFAULT NULL;
  
alter table act_comprobante
add envio_pse_mensaje varchar(1000) DEFAULT NULL;

alter table act_comprobante  
add xmlhash varchar(300) DEFAULT NULL;

alter table act_comprobante
add codigoqr varchar(300) DEFAULT NULL;
  
alter table act_comprobante
add num_ticket varchar(300) DEFAULT NULL;

alter table act_comprobante
add constraint fk_act_comprobante_cnf_local foreign key (cnf_local_id) references cnf_local(cnf_local_id);

ALTER TABLE punto_venta.act_comprobante_Detalle ADD CONSTRAINT act_comprobante_Detalle_cnf_impuesto_condicion_fk
FOREIGN KEY (cnf_impuesto_condicion_id)
REFERENCES punto_venta.cnf_impuesto_condicion (cnf_impuesto_condicion_id);

drop table act_comprobante_detalle
drop table act_comprobante
select * from cnf_tipo_comprobante
select * from information_schema.key_column_usage AS kcu where kcu.table_name = 'cnf_distrito'     

create table act_pago
(
	act_pago_id int auto_increment not null,
	act_comprobante_id int not null,
    fecha date,
    monto decimal(14,4)
)engine=innodb;

create table act_pago_detalle
(
	act_pago_id int auto_increment not null,
	act_comprobante_id int not null,
    fecha date,
    monto decimal(14,4)
)engine=innodb;
           
alter table act_comprobante
add cnf_empresa_id int;
ALTER TABLE act_comprobante ADD CONSTRAINT act_comprobante_cnf_empresa_fk
FOREIGN KEY (cnf_empresa_id)
REFERENCES cnf_empresa (cnf_empresa_id);
update act_comprobante set cnf_empresa_id = 1 where cnf_empresa_id is null;

alter table cnf_producto
add cnf_empresa_id int;
ALTER TABLE cnf_producto ADD CONSTRAINT cnf_producto_cnf_empresa_fk
FOREIGN KEY (cnf_empresa_id)
REFERENCES cnf_empresa (cnf_empresa_id);
update cnf_producto set cnf_empresa_id = 1 where cnf_empresa_id is null;

alter table cnf_categoria
add cnf_empresa_id int;
ALTER TABLE cnf_categoria ADD CONSTRAINT cnf_categoria_cnf_empresa_fk
FOREIGN KEY (cnf_empresa_id)
REFERENCES cnf_empresa (cnf_empresa_id);
update cnf_categoria set cnf_empresa_id = 1 where cnf_empresa_id is null;

alter table cnf_sub_categoria
add cnf_empresa_id int;
ALTER TABLE cnf_sub_categoria ADD CONSTRAINT cnf_sub_categoria_cnf_empresa_fk
FOREIGN KEY (cnf_empresa_id)
REFERENCES cnf_empresa (cnf_empresa_id);
update cnf_sub_categoria set cnf_empresa_id = 1 where cnf_empresa_id is null;

alter table cnf_marca
add cnf_empresa_id int;
ALTER TABLE cnf_marca ADD CONSTRAINT cnf_marca_cnf_empresa_fk
FOREIGN KEY (cnf_empresa_id)
REFERENCES cnf_empresa (cnf_empresa_id);
update cnf_marca set cnf_empresa_id = 1 where cnf_empresa_id is null;

alter table cnf_maestro
add cnf_empresa_id int;
ALTER TABLE cnf_maestro ADD CONSTRAINT cnf_maestro_cnf_empresa_fk
FOREIGN KEY (cnf_empresa_id)
REFERENCES cnf_empresa (cnf_empresa_id);
update cnf_maestro set cnf_empresa_id = 1 where cnf_empresa_id is null;

alter table cnf_forma_pago
add cnf_empresa_id int;
ALTER TABLE cnf_forma_pago ADD CONSTRAINT cnf_forma_pago_cnf_empresa_fk
FOREIGN KEY (cnf_empresa_id)
REFERENCES cnf_empresa (cnf_empresa_id);
update cnf_forma_pago set cnf_empresa_id = 1 where cnf_empresa_id is null;

ALTER TABLE seg_usuario
ADD CONSTRAINT email_UNIQUE UNIQUE (email);

UPDATE `punto_venta`.`seg_usuario` SET `email` = 'edward21.sistemas@gmail.com' WHERE (`seg_usuario_id` = '1');
UPDATE `punto_venta`.`seg_usuario` SET `email` = 'facturacionelectronica@opendeinsoft.com' WHERE (`seg_usuario_id` = '3');

ALTER TABLE `punto_venta`.`cnf_producto` 
ADD COLUMN `barcode` VARCHAR(100) NULL AFTER `cnf_empresa_id`;

UPDATE `punto_venta`.`seg_rol_usuario` SET `cnf_local_id` = null WHERE (`seg_rol_usuario_id` = '1');
UPDATE `punto_venta`.`seg_rol_usuario` SET `cnf_local_id` = null WHERE (`seg_rol_usuario_id` = '2');


alter table seg_rol_usuario
add constraint fk_seg_rol_usuario_cnf_empresa foreign key (cnf_empresa_id) references cnf_empresa(cnf_empresa_id);
alter table seg_rol_usuario
add constraint fk_seg_rol_usuario_cnf_local foreign key (cnf_local_id) references cnf_local(cnf_local_id);

ALTER TABLE `punto_venta`.`cnf_producto` 
DROP INDEX `codigo_UNIQUE` ;
;
ALTER TABLE `punto_venta`.`inv_movimiento_producto` 
RENAME TO  `punto_venta`.`inv_almacen_producto` ;

alter table cnf_empresa
add ruta_pse varchar(500);

alter table cnf_num_comprobante
add cnf_empresa_id int;

alter table cnf_num_comprobante
add constraint fk_cnf_num_comprobante_cnf_empresa foreign key (cnf_empresa_id) references cnf_empresa(cnf_empresa_id);

create table inv_movimiento_producto
(
	inv_movimiento_producto_id int auto_increment primary key,
    cnf_producto_id int,
    inv_almacen_id int,
    act_comprobante_id int,
    fecha date,
    fecha_Registro datetime,
    cantidad decimal(14,4)
)engine=innodb;

alter table inv_movimiento_producto
add constraint fk_inv_movimiento_producto_cnf_producto foreign key (cnf_producto_id) references cnf_producto(cnf_producto_id);

alter table inv_movimiento_producto
add constraint fk_inv_movimiento_producto_cnf_empresa foreign key (inv_almacen_id) references inv_almacen(inv_almacen_id);

alter table inv_movimiento_producto
add constraint fk_inv_movimiento_producto_act_comprobante foreign key (act_comprobante_id) references act_comprobante(act_comprobante_id);


-- new 2022-08-23

create table act_caja
(
	act_caja_id int auto_increment primary key,
    nombre varchar(100) not null,
    estado char(1)
)engine=innodb;

create table act_caja_turno
(
	act_caja_turno_id int auto_increment primary key,
	seg_usuario_id int,
    fecha_apertura datetime,
	fecha_cierre datetime,
    estado char(1)
)engine=innodb;

alter table act_caja_turno
add constraint fk_act_caja_turno_seg_usuario foreign key (seg_usuario_id) references seg_usuario(seg_usuario_id);

create table act_caja_operacion
(
	act_caja_operacion_id int auto_increment primary key,
	act_caja_turno_id int not null,
    act_comprobante_id int,
    act_pago_id int,
    monto decimal(14,4),
	fecha date,
    fecha_registro datetime,
    flag_ingreso char(1),
    estado char(1)
)engine=innodb;

alter table act_caja_operacion
add constraint fk_act_caja_operacion_act_caja_turno foreign key (seg_usuario_id) references seg_usuario(seg_usuario_id);

alter table act_caja_operacion
add constraint fk_act_caja_operacion_act_comprobante foreign key (act_comprobante_id) references act_comprobante(act_comprobante_id);

create table cnf_forma_pago_detalle
(
	cnf_forma_pago_detalle int auto_increment primary key,
	cnf_forma_pago_id int,
    modo_dias_intervalo int,
    modo_porcentaje decimal(14,2),
    modo_monto decimal(14,2),
    modo_dia_vencimiento int
)engine=innodb;

alter table cnf_forma_pago_detalle
add constraint fk_cnf_forma_pago_detalle_cnf_forma_pago foreign key (cnf_forma_pago_id) references cnf_forma_pago(cnf_forma_pago_id);

create table act_pago_programacion
(
	act_pago_programacion_id int auto_increment primary key,
	act_comprobante_id int not null,
    fecha date,
    fecha_vencimiento date,
    monto decimal(14,4),
    monto_pendiente decimal(14,4)
)engine=innodb;

alter table act_pago_programacion
add constraint fk_act_pago_programacion_act_comprobante foreign key (act_comprobante_id) references act_comprobante(act_comprobante_id);


create table act_pago
(
	act_pago_id int auto_increment primary key,
	act_pago_programacion_id int not null,
    fecha date,
    monto decimal(14,4)
)engine=innodb;

alter table act_pago
add constraint fk_act_pago_act_pago_programacion foreign key (act_pago_programacion_id) references act_pago_programacion(act_pago_programacion_id);

alter table act_caja_operacion
add constraint fk_act_caja_operacion_act_pago foreign key (act_pago_id) references act_pago(act_pago_id);


alter table cnf_producto
add flag_servicio int1;

ALTER TABLE act_caja
CHANGE COLUMN cnf_empresa_id cnf_empresa_id INT NULL DEFAULT NULL ;


alter table act_caja
add constraint fk_act_caja_cnf_empresa foreign key (cnf_empresa_id) references cnf_empresa(cnf_empresa_id);

ALTER TABLE act_caja_turno
ADD COLUMN act_caja_id INT NULL AFTER monto_cierre;

alter table act_caja_turno
add constraint fk_act_caja_turno_act_caja foreign key (act_caja_id) references act_caja(act_caja_id);

ALTER TABLE act_comprobante
CHANGE COLUMN seg_usuario_id seg_usuario_id INT NULL DEFAULT NULL ;

alter table act_comprobante
add constraint fk_act_comprobante_seg_usuario foreign key (seg_usuario_id) references seg_usuario(seg_usuario_id);


ALTER TABLE seg_usuario
add cnf_empresa_id INT NULL DEFAULT NULL ;

alter table seg_usuario
add constraint fk_seg_usuario_cnf_empresa foreign key (cnf_empresa_id) references cnf_empresa(cnf_empresa_id);

ALTER TABLE cnf_unidad_medida
CHANGE COLUMN codigo_sunat codigo_sunat CHAR(3) NOT NULL ;

ALTER TABLE cnf_unidad_medida
CHANGE COLUMN nombre nombre VARCHAR(100) NOT NULL ;
